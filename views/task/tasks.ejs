<%- include('../partials/header', {title: title}); %>

<main class="py-4">
  <div class="container">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
      <div>
        <h1 class="h2 fw-bold mb-0">
          <% if (project) { %>
            <%= project.name %> Tasks
          <% } else { %>
            My Tasks
          <% } %>
        </h1>
        <p class="text-muted mb-0">
          <% if (project) { %>
            View and manage tasks for this project
          <% } else { %>
            View and manage your assigned tasks
          <% } %>
        </p>
      </div>
      <div class="d-flex gap-2">
        <div class="dropdown">
          <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
            <i class="fas fa-filter me-1"></i> Filter
          </button>
          <ul class="dropdown-menu">
            <li><a class="dropdown-item" href="?status=all">All Tasks</a></li>
            <li><a class="dropdown-item" href="?status=todo">To Do</a></li>
            <li><a class="dropdown-item" href="?status=inProgress">In Progress</a></li>
            <li><a class="dropdown-item" href="?status=done">Done</a></li>
          </ul>
        </div>
        <% if (project) { %>
          <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#newTaskModal">
            <i class="fas fa-plus me-2"></i> New Task
          </button>
        <% } else { %>
        <% } %>
      </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="card shadow-sm mb-4">
      <div class="card-body">
        <form action="/tasks" method="GET" class="row g-3" id="searchForm">
          <div class="col-md-4 position-relative">
            <div class="input-group">
              <span class="input-group-text"><i class="fas fa-search"></i></span>
              <input type="text" class="form-control" name="search" id="searchInput" 
                     placeholder="Search tasks by title, description, or assignee..." 
                     value="<%= typeof query !== 'undefined' ? query.search : '' %>"
                     autocomplete="off">
            </div>
            <div id="searchSuggestions" class="position-absolute w-100 bg-white shadow-sm rounded-bottom" 
                 style="display: none; z-index: 1000; max-height: 200px; overflow-y: auto;">
            </div>
          </div>
          <div class="col-md-2">
            <select class="form-select" name="status">
              <option value="">All Status</option>
              <option value="todo" <%= typeof query !== 'undefined' && query.status === 'todo' ? 'selected' : '' %>>To Do</option>
              <option value="inProgress" <%= typeof query !== 'undefined' && query.status === 'inProgress' ? 'selected' : '' %>>In Progress</option>
              <option value="done" <%= typeof query !== 'undefined' && query.status === 'done' ? 'selected' : '' %>>Done</option>
              <option value="backlog" <%= typeof query !== 'undefined' && query.status === 'backlog' ? 'selected' : '' %>>Backlog</option>
              <option value="blocked" <%= typeof query !== 'undefined' && query.status === 'blocked' ? 'selected' : '' %>>Blocked</option>
            </select>
          </div>
          <div class="col-md-2">
            <select class="form-select" name="priority">
              <option value="">All Priority</option>
              <option value="low" <%= typeof query !== 'undefined' && query.priority === 'low' ? 'selected' : '' %>>Low</option>
              <option value="medium" <%= typeof query !== 'undefined' && query.priority === 'medium' ? 'selected' : '' %>>Medium</option>
              <option value="high" <%= typeof query !== 'undefined' && query.priority === 'high' ? 'selected' : '' %>>High</option>
            </select>
          </div>
          <div class="col-md-2">
            <select class="form-select" name="sort">
              <option value="dueDate" <%= typeof query !== 'undefined' && query.sort === 'dueDate' ? 'selected' : '' %>>Due Date</option>
              <option value="priority" <%= typeof query !== 'undefined' && query.sort === 'priority' ? 'selected' : '' %>>Priority</option>
              <option value="createdAt" <%= typeof query !== 'undefined' && query.sort === 'createdAt' ? 'selected' : '' %>>Created Date</option>
            </select>
          </div>
          <div class="col-md-2">
            <button type="submit" class="btn btn-primary w-100">
              <i class="fas fa-filter me-2"></i>Filter
            </button>
          </div>
        </form>
      </div>
    </div>

    <!-- Search Results Summary -->
    <% if (typeof query !== 'undefined' && query.search) { %>
      <div class="alert alert-info mb-4">
        <i class="fas fa-info-circle me-2"></i>
        Showing results for "<%= query.search %>"
        <% if (tasks.length === 0) { %>
          - No tasks found
        <% } else { %>
          - Found <%= tasks.length %> task<%= tasks.length === 1 ? '' : 's' %>
        <% } %>
      </div>
    <% } %>

    <!-- Task Stats -->
    <div class="row g-4 mb-4">
      <div class="col-md-4">
        <div class="card border-0 shadow-sm">
          <div class="card-body">
            <div class="d-flex align-items-center">
              <div class="flex-shrink-0">
                <div class="bg-primary bg-opacity-10 p-3 rounded">
                  <i class="fas fa-tasks text-primary"></i>
                </div>
              </div>
              <div class="flex-grow-1 ms-3">
                <h6 class="mb-1">Total Tasks</h6>
                <h3 class="mb-0"><%= taskCount %></h3>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="col-md-4">
        <div class="card border-0 shadow-sm">
          <div class="card-body">
            <div class="d-flex align-items-center">
              <div class="flex-shrink-0">
                <div class="bg-success bg-opacity-10 p-3 rounded">
                  <i class="fas fa-check text-success"></i>
                </div>
              </div>
              <div class="flex-grow-1 ms-3">
                <h6 class="mb-1">Completed</h6>
                <h3 class="mb-0"><%= completedTasks %></h3>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="col-md-4">
        <div class="card border-0 shadow-sm">
          <div class="card-body">
            <div class="d-flex align-items-center">
              <div class="flex-shrink-0">
                <div class="bg-warning bg-opacity-10 p-3 rounded">
                  <i class="fas fa-clock text-warning"></i>
                </div>
              </div>
              <div class="flex-grow-1 ms-3">
                <h6 class="mb-1">Due Soon</h6>
                <h3 class="mb-0"><%= dueSoonTasks %></h3>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Tasks List -->
    <div class="card border-0 shadow-sm">
      <div class="table-responsive">
        <table class="table table-hover mb-0">
          <thead class="bg-light">
            <tr>
              <th class="border-0">Task</th>
              <% if (!project) { %>
                <th class="border-0">Project</th>
              <% } %>
              <th class="border-0">Status</th>
              <th class="border-0">Due Date</th>
              <th class="border-0">Priority</th>
              <th class="border-0">Actions</th>
            </tr>
          </thead>
          <tbody>
            <% if (tasks && tasks.length > 0) { %>
              <% tasks.forEach(task => { %>
                <tr data-task-id="<%= task._id %>">
                  <td>
                    <a href="/tasks/<%= task._id %>" class="text-decoration-none">
                      <div class="d-flex align-items-center">
                        <div class="form-check me-3">
                          <input class="form-check-input" type="checkbox" <%= task.isComplete ? 'checked' : '' %>>
                        </div>
                        <div>
                          <h6 class="mb-0"><%= task.title %></h6>
                          <small class="text-muted"><%= task.description?.substring(0, 50) %><%= task.description?.length > 50 ? '...' : '' %></small>
                        </div>
                      </div>
                    </a>
                  </td>
                  <% if (!project) { %>
                    <td>
                      <a href="/projects/<%= task.project._id %>" class="text-decoration-none">
                        <%= task.project.name %>
                      </a>
                    </td>
                  <% } %>
                  <td>
                    <span class="badge bg-<%= task.status === 'done' ? 'success' : task.status === 'inProgress' ? 'primary' : task.status === 'blocked' ? 'danger' : task.status === 'backlog' ? 'warning' : 'secondary' %>">
                      <%= task.status %>
                    </span>
                  </td>
                  <td>
                    <% if (task.dueDate) { %>
                      <span class="<%= new Date(task.dueDate) < new Date() && !task.isComplete ? 'text-danger' : '' %>">
                        <%= new Date(task.dueDate).toLocaleDateString() %>
                      </span>
                    <% } else { %>
                      <span class="text-muted">No due date</span>
                    <% } %>
                  </td>
                  <td>
                    <span class="badge bg-<%= task.priority === 'high' ? 'danger' : task.priority === 'medium' ? 'warning' : 'info' %>">
                      <%= task.priority.charAt(0).toUpperCase() + task.priority.slice(1) %>
                    </span>
                  </td>
                  <td>
                    <div class="dropdown">
                      <button class="btn btn-sm btn-link text-muted" type="button" data-bs-toggle="dropdown">
                        <i class="fas fa-ellipsis-v"></i>
                      </button>
                      <ul class="dropdown-menu">
                        <li>
                          <button class="dropdown-item" data-edit-task="<%= task._id %>">
                            <i class="fas fa-pencil-alt me-2"></i>Edit
                          </button>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                          <button class="dropdown-item text-danger" data-delete-task="<%= task._id %>">
                            <i class="fas fa-trash me-2"></i>Delete
                          </button>
                        </li>
                      </ul>
                    </div>
                  </td>
                </tr>
              <% }); %>
            <% } else { %>
              <tr>
                <td colspan="<%= project ? '5' : '6' %>" class="text-center py-4">
                  <div class="text-muted">
                    <i class="fas fa-tasks fa-2x mb-3"></i>
                    <p class="mb-0">No tasks found</p>
                    <% if (project) { %>
                      <button class="btn btn-sm btn-primary mt-2" data-bs-toggle="modal" data-bs-target="#newTaskModal">
                        Create your first task
                      </button>
                    <% } else { %>
                      <p>Go to a project to create a task</p>
                    <% } %>
                  </div>
                </td>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</main>

<% if (project) { %>
  <!-- New Task Modal -->
  <div class="modal fade" id="newTaskModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Create New Task</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form action="/tasks/project/<%= project._id %>/create" method="POST" id="newTaskForm">
            <div class="row g-3">
              <div class="col-md-12">
                <label for="taskTitle" class="form-label">Task Title</label>
                <input type="text" class="form-control" id="taskTitle" name="title" required>
              </div>
              <div class="col-md-12">
                <label for="taskDescription" class="form-label">Description</label>
                <textarea class="form-control" id="taskDescription" name="description" rows="3"></textarea>
              </div>
              <div class="col-md-6">
                <label for="taskDueDate" class="form-label">Due Date</label>
                <input type="date" class="form-control" id="taskDueDate" name="dueDate">
              </div>
              <div class="col-md-6">
                <label for="taskPriority" class="form-label">Priority</label>
                <select class="form-select" id="taskPriority" name="priority">
                  <option value="low">Low</option>
                  <option value="medium" selected>Medium</option>
                  <option value="high">High</option>
                </select>
              </div>
              <div class="col-md-12">
                <label for="taskAssignee" class="form-label">Assign To</label>
                <select class="form-select" id="taskAssignee" name="assignees" multiple>
                  <% project.members.forEach(member => { %>
                    <option value="<%= member.user._id %>"><%= member.user.firstName %> <%= member.user.lastName %></option>
                  <% }); %>
                </select>
                <div class="form-text">Hold Ctrl/Cmd to select multiple assignees</div>
              </div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" form="newTaskForm" class="btn btn-primary">Create Task</button>
        </div>
      </div>
    </div>
  </div>
<% } %>

<%- include('../partials/footer'); %>

<script>
// Handle task status updates
document.querySelectorAll('.form-check-input').forEach(checkbox => {
    checkbox.addEventListener('change', async function() {
        const taskId = this.closest('tr').dataset.taskId;
        const isComplete = this.checked;

        try {
            const response = await fetch(`/tasks/${taskId}/status`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ isComplete })
            });

            if (!response.ok) {
                throw new Error('Failed to update task status');
            }

            // Update UI
            const statusBadge = this.closest('tr').querySelector('.badge');
            if (statusBadge) {
                statusBadge.className = `badge bg-${isComplete ? 'success' : 'secondary'}`;
                statusBadge.textContent = isComplete ? 'Done' : 'To Do';
            }

            // Update task count
            const completedCount = document.querySelector('.completed-tasks-count');
            if (completedCount) {
                const currentCount = parseInt(completedCount.textContent);
                completedCount.textContent = isComplete ? currentCount + 1 : currentCount - 1;
            }
        } catch (error) {
            console.error('Error:', error);
            this.checked = !isComplete; // Revert checkbox state
            alert('Failed to update task status. Please try again.');
        }
    });
});

// Handle task deletion
document.querySelectorAll('[data-delete-task]').forEach(button => {
    button.addEventListener('click', async function(e) {
        e.preventDefault();
        if (!confirm('Are you sure you want to delete this task?')) {
            return;
        }

        const taskId = this.dataset.deleteTask;
        try {
            const response = await fetch(`/tasks/${taskId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            if (!response.ok) {
                throw new Error('Failed to delete task');
            }

            // Remove task from UI
            const taskRow = this.closest('tr');
            taskRow.remove();

            // Update task count
            const taskCount = document.querySelector('.total-tasks-count');
            if (taskCount) {
                const currentCount = parseInt(taskCount.textContent);
                taskCount.textContent = currentCount - 1;
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Failed to delete task. Please try again.');
        }
    });
});

// Handle task editing
document.querySelectorAll('[data-edit-task]').forEach(button => {
    button.addEventListener('click', function(e) {
        e.preventDefault();
        const taskId = this.dataset.editTask;
        window.location.href = `/tasks/${taskId}/edit`;
    });
});

document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    const searchSuggestions = document.getElementById('searchSuggestions');
    let searchTimeout;

    searchInput.addEventListener('input', function() {
        clearTimeout(searchTimeout);
        const query = this.value.trim();
        
        if (query.length < 2) {
            searchSuggestions.style.display = 'none';
            return;
        }

        searchTimeout = setTimeout(() => {
            fetch(`/tasks/search/suggestions?q=${encodeURIComponent(query)}`)
                .then(response => response.json())
                .then(data => {
                    if (data.suggestions && data.suggestions.length > 0) {
                        searchSuggestions.innerHTML = data.suggestions.map(suggestion => `
                            <div class="p-2 border-bottom suggestion-item" style="cursor: pointer;">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-tasks me-2 text-muted"></i>
                                    <div>
                                        <div class="fw-bold">${suggestion.title}</div>
                                        <small class="text-muted">${suggestion.project ? suggestion.project.name : 'No Project'}</small>
                                    </div>
                                </div>
                            </div>
                        `).join('');
                        
                        searchSuggestions.style.display = 'block';
                        
                        // Add click handlers to suggestions
                        document.querySelectorAll('.suggestion-item').forEach(item => {
                            item.addEventListener('click', function() {
                                searchInput.value = this.querySelector('.fw-bold').textContent;
                                searchSuggestions.style.display = 'none';
                                document.getElementById('searchForm').submit();
                            });
                        });
                    } else {
                        searchSuggestions.style.display = 'none';
                    }
                })
                .catch(error => {
                    console.error('Error fetching suggestions:', error);
                    searchSuggestions.style.display = 'none';
                });
        }, 300);
    });

    // Close suggestions when clicking outside
    document.addEventListener('click', function(e) {
        if (!searchInput.contains(e.target) && !searchSuggestions.contains(e.target)) {
            searchSuggestions.style.display = 'none';
        }
    });
});
</script>
