<%- include('../partials/header', {title: `${task.title} | TaskWave`}); %>

<main class="py-4">
  <div class="container">
    <!-- Back Button -->
    <div class="mb-4">
      <a href="<%= project ? `/projects/${project._id}` : '/tasks' %>" class="btn btn-link text-decoration-none">
        <i class="fas fa-arrow-left me-2"></i>Back to <%= project ? project.name : 'Tasks' %>
      </a>
    </div>

    <!-- Task Header -->
    <div class="card border-0 shadow-sm mb-4">
      <div class="card-body">
        <div class="d-flex justify-content-between align-items-start">
          <div class="d-flex align-items-center">
            <div class="form-check me-3">
              <input class="form-check-input" type="checkbox" id="taskStatus" 
                     <%= task.isComplete ? 'checked' : '' %> data-task-id="<%= task._id %>">
            </div>
            <div>
              <h1 class="h3 mb-1"><%= task.title %></h1>
              <div class="d-flex align-items-center gap-2">
                <span class="badge bg-<%= task.status === 'todo' ? 'secondary' : task.status === 'inProgress' ? 'warning' : 'success' %>">
                  <%= task.status.charAt(0).toUpperCase() + task.status.slice(1) %>
                </span>
                <span class="badge bg-<%= task.priority === 'high' ? 'danger' : task.priority === 'medium' ? 'warning' : 'info' %>">
                  <%= task.priority.charAt(0).toUpperCase() + task.priority.slice(1) %> Priority
                </span>
                <% if (task.dueDate) { %>
                  <span class="<%= new Date(task.dueDate) < new Date() && !task.isComplete ? 'text-danger' : 'text-muted' %>">
                    <i class="far fa-calendar-alt me-1"></i>
                    Due <%= new Date(task.dueDate).toLocaleDateString() %>
                    <% if (new Date(task.dueDate) < new Date() && !task.isComplete) { %>
                      <span class="badge bg-danger ms-2">Overdue</span>
                    <% } %>
                  </span>
                <% } %>
              </div>
            </div>
          </div>
          <div class="dropdown">
            <button class="btn btn-link text-muted" type="button" data-bs-toggle="dropdown">
              <i class="fas fa-ellipsis-v"></i>
            </button>
            <ul class="dropdown-menu dropdown-menu-end">
              <li>
                <button class="dropdown-item" data-bs-toggle="modal" data-bs-target="#editTaskModal">
                  <i class="fas fa-pencil-alt me-2"></i>Edit Task
                </button>
              </li>
              <li><hr class="dropdown-divider"></li>
              <li>
                <button class="dropdown-item text-danger" data-delete-task="<%= task._id %>">
                  <i class="fas fa-trash me-2"></i>Delete Task
                </button>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>

    <div class="row">
      <!-- Main Content -->
      <div class="col-lg-8">
        <!-- Description -->
        <div class="card border-0 shadow-sm mb-4">
          <div class="card-header bg-white border-0">
            <h5 class="mb-0">Description</h5>
          </div>
          <div class="card-body">
            <p class="mb-0"><%= task.description || 'No description provided' %></p>
          </div>
        </div>

        <!-- Comments Section -->
        <div class="card border-0 shadow-sm">
          <div class="card-header bg-white border-0">
            <h5 class="mb-0">Comments</h5>
          </div>
          <div class="card-body">
            <div class="mb-4">
              <form id="commentForm">
                <div class="mb-3">
                  <textarea class="form-control" rows="3" placeholder="Add a comment..."></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Post Comment</button>
              </form>
            </div>
            <div id="commentsList">
              <!-- Comments will be loaded here -->
              <p class="text-muted text-center">No comments yet</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Sidebar -->
      <div class="col-lg-4">
        <!-- Task Details -->
        <div class="card border-0 shadow-sm mb-4">
          <div class="card-header bg-white border-0">
            <h5 class="mb-0">Task Details</h5>
          </div>
          <div class="card-body">
            <div class="mb-3">
              <h6 class="text-muted mb-2">Created By</h6>
              <div class="d-flex align-items-center">
                <% if (task.createdBy?.avatar) { %>
                  <img src="<%= task.createdBy.avatar %>" alt="<%= task.createdBy.firstName %>" 
                       class="rounded-circle me-2" width="32" height="32">
                <% } else { %>
                  <div class="rounded-circle bg-primary bg-opacity-10 me-2 d-flex align-items-center justify-content-center" 
                       style="width: 32px; height: 32px;">
                    <i class="fas fa-user text-primary"></i>
                  </div>
                <% } %>
                <div>
                  <div class="fw-medium"><%= task.createdBy?.firstName %> <%= task.createdBy?.lastName %></div>
                  <small class="text-muted"><%= new Date(task.createdAt).toLocaleDateString() %></small>
                </div>
              </div>
            </div>

            <div class="mb-3">
              <h6 class="text-muted mb-2">Assigned To</h6>
              <% if (task.assignees && task.assignees.length > 0) { %>
                <div class="d-flex flex-wrap gap-2">
                  <% task.assignees.forEach(assignee => { %>
                    <div class="d-flex align-items-center">
                      <% if (assignee.avatar) { %>
                        <img src="<%= assignee.avatar %>" alt="<%= assignee.firstName %>" 
                             class="rounded-circle me-2" width="32" height="32">
                      <% } else { %>
                        <div class="rounded-circle bg-primary bg-opacity-10 me-2 d-flex align-items-center justify-content-center" 
                             style="width: 32px; height: 32px;">
                          <i class="fas fa-user text-primary"></i>
                        </div>
                      <% } %>
                      <div>
                        <div class="fw-medium"><%= assignee.firstName %> <%= assignee.lastName %></div>
                        <small class="text-muted"><%= assignee.email %></small>
                      </div>
                    </div>
                  <% }); %>
                </div>
              <% } else { %>
                <p class="text-muted mb-0">No assignees</p>
              <% } %>
            </div>

            <div class="mb-3">
              <h6 class="text-muted mb-2">Project</h6>
              <a href="/projects/<%= project._id %>" class="text-decoration-none">
                <div class="d-flex align-items-center">
                  <div class="rounded-circle bg-primary bg-opacity-10 me-2 d-flex align-items-center justify-content-center" 
                       style="width: 32px; height: 32px;">
                    <i class="fas fa-project-diagram text-primary"></i>
                  </div>
                  <div>
                    <div class="fw-medium"><%= project.name %></div>
                    <small class="text-muted">View Project</small>
                  </div>
                </div>
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</main>

<!-- Edit Task Modal -->
<div class="modal fade" id="editTaskModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Edit Task</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="editTaskForm">
          <div class="row g-3">
            <div class="col-md-12">
              <label for="editTaskTitle" class="form-label">Task Title</label>
              <input type="text" class="form-control" id="editTaskTitle" name="title" 
                     value="<%= task.title %>" required>
            </div>
            <div class="col-md-12">
              <label for="editTaskDescription" class="form-label">Description</label>
              <textarea class="form-control" id="editTaskDescription" name="description" 
                        rows="3"><%= task.description %></textarea>
            </div>
            <div class="col-md-6">
              <label for="editTaskDueDate" class="form-label">Due Date</label>
              <input type="date" class="form-control" id="editTaskDueDate" name="dueDate" 
                     value="<%= task.dueDate ? new Date(task.dueDate).toISOString().split('T')[0] : '' %>">
            </div>
            <div class="col-md-6">
              <label for="editTaskPriority" class="form-label">Priority</label>
              <select class="form-select" id="editTaskPriority" name="priority">
                <option value="low" <%= task.priority === 'low' ? 'selected' : '' %>>Low</option>
                <option value="medium" <%= task.priority === 'medium' ? 'selected' : '' %>>Medium</option>
                <option value="high" <%= task.priority === 'high' ? 'selected' : '' %>>High</option>
              </select>
            </div>
            <div class="col-md-12">
              <label for="editTaskStatus" class="form-label">Status</label>
              <select class="form-select" id="editTaskStatus" name="status">
                <option value="todo" <%= task.status === 'todo' ? 'selected' : '' %>>To Do</option>
                <option value="inProgress" <%= task.status === 'inProgress' ? 'selected' : '' %>>In Progress</option>
                <option value="done" <%= task.status === 'done' ? 'selected' : '' %>>Done</option>
              </select>
            </div>
            <div class="col-md-12">
              <label for="editTaskAssignee" class="form-label">Assign To</label>
              <select class="form-select" id="editTaskAssignee" name="assignees" multiple>
                <% project.members.forEach(member => { %>
                  <option value="<%= member.user._id %>" 
                          <%= task.assignees.some(a => a._id.toString() === member.user._id.toString()) ? 'selected' : '' %>>
                    <%= member.user.firstName %> <%= member.user.lastName %>
                  </option>
                <% }); %>
              </select>
              <div class="form-text">Hold Ctrl/Cmd to select multiple assignees</div>
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" form="editTaskForm" class="btn btn-primary">Save Changes</button>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Task Status Update
  const taskStatusCheckbox = document.getElementById('taskStatus');
  if (taskStatusCheckbox) {
    taskStatusCheckbox.addEventListener('change', async function() {
      const taskId = this.dataset.taskId;
      try {
        const response = await fetch(`/tasks/${taskId}/status`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            isComplete: this.checked
          })
        });

        if (!response.ok) {
          throw new Error('Failed to update task status');
        }

        // Update UI
        const statusBadge = document.querySelector('.badge.bg-secondary, .badge.bg-warning, .badge.bg-success');
        if (statusBadge) {
          statusBadge.textContent = this.checked ? 'Done' : 'To Do';
          statusBadge.className = `badge bg-${this.checked ? 'success' : 'secondary'}`;
        }
      } catch (error) {
        console.error('Error:', error);
        this.checked = !this.checked; // Revert checkbox state
        alert('Failed to update task status. Please try again.');
      }
    });
  }

  // Task Deletion
  const deleteButtons = document.querySelectorAll('[data-delete-task]');
  deleteButtons.forEach(button => {
    button.addEventListener('click', async function() {
      if (!confirm('Are you sure you want to delete this task?')) {
        return;
      }

      const taskId = this.dataset.deleteTask;
      try {
        const response = await fetch(`/tasks/${taskId}`, {
          method: 'DELETE'
        });

        if (!response.ok) {
          throw new Error('Failed to delete task');
        }

        window.location.href = '<%= project ? `/projects/${project._id}` : "/tasks" %>';
      } catch (error) {
        console.error('Error:', error);
        alert('Failed to delete task. Please try again.');
      }
    });
  });

  // Task Edit Form
  const editTaskForm = document.getElementById('editTaskForm');
  if (editTaskForm) {
    editTaskForm.addEventListener('submit', async function(e) {
      e.preventDefault();
      const taskId = '<%= task._id %>';
      const formData = new FormData(this);
      const data = Object.fromEntries(formData.entries());

      try {
        const response = await fetch(`/tasks/${taskId}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        });

        if (!response.ok) {
          throw new Error('Failed to update task');
        }

        window.location.reload();
      } catch (error) {
        console.error('Error:', error);
        alert('Failed to update task. Please try again.');
      }
    });
  }
});
</script>

<%- include('../partials/footer'); %>
